{"version":3,"file":"index.fade0376.js","sources":["../../../paw_frontend/vite/modulepreload-polyfill","../../../paw_frontend/src/components/NavBar.jsx","../../../paw_frontend/src/pages/Signup.jsx","../../../paw_frontend/src/pages/Login.jsx","../../../paw_frontend/src/components/UserDashboard.jsx","../../../paw_frontend/src/components/CurrentWeather.jsx","../../../paw_frontend/src/components/ProviderDashboard.jsx","../../../paw_frontend/src/components/LoadingSpinner.jsx","../../../paw_frontend/src/pages/DashboardPage.jsx","../../../paw_frontend/src/pages/AddPet.jsx","../../../paw_frontend/src/components/MapContainer.jsx","../../../paw_frontend/src/pages/AddBase.jsx","../../../paw_frontend/src/pages/ConnectPal.jsx","../../../paw_frontend/src/pages/ProviderPage.jsx","../../../paw_frontend/src/pages/ChatPage.jsx","../../../paw_frontend/src/pages/ScheduleWalk.jsx","../../../paw_frontend/src/components/MyStopwatch.jsx","../../../paw_frontend/src/components/WalkForm.jsx","../../../paw_frontend/src/pages/WalkPage.jsx","../../../paw_frontend/src/pages/WalkDetail.jsx","../../../paw_frontend/src/pages/PetDetail.jsx","../../../paw_frontend/src/pages/PetEdit.jsx","../../../paw_frontend/src/pages/ProfilePage.jsx","../../../paw_frontend/src/pages/EditProfile.jsx","../../../paw_frontend/src/App.jsx","../../../paw_frontend/src/main.jsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios';\n\nfunction NavBar({ user, checkUser }) {\n\n  const navigate = useNavigate()\n\n  const logOut = (event) => {\n    event.preventDefault()\n    axios.post('/logout').then((response) => {\n      console.log('response from server: ', response)\n      checkUser()\n    }).then(\n      navigate('/login', { replace: true })\n    )\n\n  }\n\n  const navHome = () => {\n    navigate('/')\n    window.location.reload()\n  }\n\n  const navProfile = () => {\n    navigate(`/user/${user.id}/view`)\n    window.location.reload()\n  }\n\n\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\" variant='dark'>\n      <Container>\n        <Navbar.Brand onClick={navHome}>\n          <img\n            src=\"https://www.creativefabrica.com/wp-content/uploads/2020/07/23/Dog-Paw-Print-with-Middle-Divider-Graphics-4699120-2-580x404.jpg\"\n            width=\"40\"\n            height=\"40\"\n            className=\"d-inline-block align-top nav-logo\"\n            alt=\"Paw Logo\"\n          /></Navbar.Brand>\n        <Navbar.Brand onClick={navHome}>Paw Platoon</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {user && <Nav.Link onClick={navHome}>Dashboard</Nav.Link>}\n            {user && <Nav.Link onClick={navProfile}>Profile</Nav.Link>}\n            {user && <Nav.Link onClick={logOut}>Log Out</Nav.Link>}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { useState } from 'react';\nimport axios from 'axios';\nimport '../App.css'\n\nfunction Signup() {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    let navigate = useNavigate()\n\n\n    const handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        for (let i = 0; i < 6; i++) {\n            if (event.target[i].value == \"\") {\n                setErrorMessage(`Must enter a ${event.target[i].placeholder}!!`)\n                return\n            }\n        }\n\n        if (event.target[6].value == \"Choose your Role\") {\n            setErrorMessage('Must choose a Role!!!')\n            return\n        }\n\n        axios.post('/signup', {\n            'email': event.target[0].value,\n            'firstName': event.target[1].value,\n            'lastName': event.target[2].value,\n            'address': event.target[3].value,\n            'zip': event.target[4].value,\n            'password': event.target[5].value,\n            'role': event.target[6].value,\n        }).then((response) => {\n            if (response.data.data == 'success') {\n                navigate(\"/login\", { replace: true })\n            }\n            else {\n                setErrorMessage(`${response.data.data}`)\n            }\n        })\n    }\n\n    const login = (event) => {\n        event.preventDefault()\n        navigate(\"/login\", { replace: true })\n    }\n\n    return (\n        <Container>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    <h2>Sign Up</h2>\n                </Col>\n            </Row>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"Email\" placeholder=\"Email\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control type=\"First Name\" placeholder=\"First Name\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formLastName\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"Last Name\" placeholder=\"Last Name\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control type=\"Address\" placeholder=\"Address\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formZip\">\n                            <Form.Label>Zip Code</Form.Label>\n                            <Form.Control type=\"Zip Code\" placeholder=\"Zip Code\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formRole\">\n                            <Form.Label>Role</Form.Label>\n                            <Form.Select aria-label=\"Choose Role\">\n                                <option>Choose your Role</option>\n                                <option value=\"User\">User (I want my pets taken care of)</option>\n                                <option value=\"Pet Care Provider\">Pet Care Provider (I want to take care of other's pets)</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <Button variant=\"secondary\" type=\"submit\" onClick={login}>\n                        Log In\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Signup","import { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { useState } from 'react'\nimport '../App.css'\n\nfunction Login({ checkUser }) {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    const navigate = useNavigate()\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        axios.post('/login', {\n            'email': event.target[0].value,\n            'password': event.target[1].value,\n        }).then((response) => {\n            if (response.data.data == 'success') {\n                checkUser()\n            }\n            else {\n                setErrorMessage(response.data.data)\n            }\n        }).then((response) => {\n            navigate(\"/\", { replace: true })\n        }\n        ).finally(() => {\n            window.location.reload()\n        }\n        )\n\n    }\n\n    const signUp = (event) => {\n        event.preventDefault();\n        navigate(\"/signup\", { replace: true })\n    }\n\n    return (\n        <Container>\n            <Row className='space'>\n                <Col className='text-center'>\n                    <h1 className='login-header'>P<span><img className=\"header-pic\" src=\"https://www.creativefabrica.com/wp-content/uploads/2020/07/23/Dog-Paw-Print-with-Middle-Divider-Graphics-4699120-2-580x404.jpg\" alt=\"Paw Logo\" /></span>w Platoon</h1>\n                    <h4 className='under-login-header'>Pet Care For The Military Community</h4>\n                </Col>\n            </Row>\n            <Row className='space login-pic'>\n                <Col>\n                    {/* <img className=\"login-pic\" src=\"https://i.pinimg.com/originals/a6/55/70/a65570bd40d125cfe6abacbf85e96b3b.jpg\" alt=\"Soldier and Dog Picture\" /> */}\n                </Col>\n                <Col className='align-items-center mt-5'>\n                    <h2 className='text-center text-white'>Log In</h2>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label className='text-white'>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label className='text-white'>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Log In\n                        </Button>\n                    </Form>\n                    <Button className=\"mt-2\" variant=\"secondary\" type=\"submit\" onClick={signUp}>\n                        Sign Up\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Login","import { Container, Row, Col, Button } from 'react-bootstrap'\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nfunction UserDashboard({ user, pets, bases }) {\n    const [walker, setWalker] = useState(null)\n    const [walks, setWalks] = useState(null)\n    const [completedWalks, setCompletedWalks] = useState(null)\n\n    const getWalker = async () => {\n        const checkProvider = await axios.get('/provider/get')\n        let checkWalker = checkProvider && checkProvider.data\n        setWalker(checkWalker)\n    }\n\n    const getPetWalks = async () => {\n        const checkWalks = await axios.get('/getpetwalks')\n        let upcomingWalks = checkWalks && checkWalks.data\n        setWalks(upcomingWalks)\n    }\n\n    const getCompletedWalks = async () => {\n        const checkWalks = await axios.get('/getcompletedwalks')\n        let completedWalks = checkWalks && checkWalks.data\n        setCompletedWalks(completedWalks)\n    }\n\n    useEffect(() => {\n        getWalker().then(getPetWalks()).then(getCompletedWalks)\n    }, [])\n\n    return (\n        <Container>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    {user && <div className='text-center'><h2 className=\"dash-header\">{user.first_name}'s Dashboard</h2><a href={`#/user/${user.id}/view`}>View Profile</a></div>}\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-5'>\n                <Col><h4 className=\"dash-header\">Your Pets:</h4>\n                    <hr />\n                    {pets && pets.map((pet) => (<div className='same-line-div'><h5>{pet.species}: {pet.name} -</h5> <a href={`#/pet/${pet.id}/view`}>View Details</a></div>))}\n                    <Button variant=\"primary\" href='/#/addpet'>\n                        Add Pet\n                    </Button>\n                </Col>\n                <Col>\n                    <h4 className=\"dash-header\">Your Bases:</h4>\n                    <hr />\n                    {bases && bases.map((base) => (<h5>{base}</h5>))}\n                    <Button variant=\"primary\" href='/#/addbase'>\n                        Connect A Base\n                    </Button>\n                </Col>\n                <Col>\n                    <h4 className=\"dash-header\">Your Pet Pal:</h4>\n                    <hr />\n                    {walker && <h5>{walker.first_name} {walker.last_name}</h5>}\n                    {user && walker && <a className='new-line' href={`/#/chat/${walker.id}`}>Message</a>}\n                    {walker && <a className='new-line' href='/#/schedulewalk'>Schedule Walk</a>}\n                    <Button variant=\"primary\" href='/#/connectpal'>Connect A PetPal</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <hr />\n                    <h4 className=\"dash-header\">Upcoming Walks:</h4>\n                    <hr />\n                    {walker && walks && walks.map((walk) => (<div><h5>{walk.pets.map((pet) => (<span>{pet} </span>))}</h5>\n                        <p>Date: {walk.date}</p>\n                        <p>Time: {walk.time}</p>\n                        <p>With {walker.first_name}</p>\n                        <hr />\n                    </div>))}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h4 className=\"dash-header\">Completed Walks:</h4>\n                    <hr />\n                    {completedWalks && completedWalks.map((walk) => (<div><h5>{walk.pets.map((pet) => (<span>{pet} </span>))}</h5>\n                        <p>Date: {walk.date}</p>\n                        <p>Time Walked (hrs:mins:secs): {walk.time}</p>\n                        <p>With {walker.first_name}</p>\n                        <a href={`#/walk/${walk.id}/view`}>View Details</a>\n                        <hr />\n                    </div>))}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default UserDashboard;","import React, { useState, useEffect } from 'react'\n\nfunction CurrentWeather(props) {\n  const [temp, setTemp] = useState(null)\n  const [weather, setWeather] = useState(null)\n  const [city, setCity] = useState(null)\n  const myOpenWeatherApiKey = \"a38762d3a90b8970956657273fead807\"\n\n  const getTemp = async () => {\n    try {\n      let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?zip=${props.user.zip_code},us&appid=${myOpenWeatherApiKey}`)\n\n      if (response.ok) {\n        let data = await response.json()\n        if (data) {\n          let celcTemp = data.main.temp - 273.15\n          let fahrTemp = Math.round((celcTemp * 9 / 5) + 32)\n          setTemp(`${fahrTemp}°F`)\n          setCity(data.name)\n          setWeather(data.weather[0].description)\n        }\n      }\n    }\n    catch (e) {\n      console.error(e)\n    }\n  }\n\n  useEffect(() => {\n    getTemp()\n  }, [])\n\n  return (\n    <div>\n      {temp && weather && city && <div className='text-center border-div'>\n        <h5>Weather for today's walks in {city}</h5>\n        <h5>{temp} with {weather}</h5>\n      </div>}\n    </div>\n  )\n}\n\nexport default CurrentWeather","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport CurrentWeather from './CurrentWeather';\n\nfunction ProviderDashboard({ user, bases }) {\n    const [connections, setConnections] = useState(null)\n    const [walks, setWalks] = useState(null)\n\n    const getConnections = async () => {\n        const response = await axios.get('/checkconnections')\n        let checkConnects = response && response.data\n        setConnections(checkConnects)\n    }\n\n    const getProviderWalks = async () => {\n        const checkWalks = await axios.get('/getproviderwalks')\n        let upcomingWalks = checkWalks && checkWalks.data\n        setWalks(upcomingWalks)\n    }\n\n    useEffect(() => {\n        getConnections().then(getProviderWalks())\n    }, [])\n    return (\n        <Container>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    {user && <div className='text-center'><h2 className=\"dash-header\">{user.first_name}'s Dashboard</h2><a href={`#/user/${user.id}/view`}>View Profile</a></div>}\n                </Col>\n                <Col>\n                    {user && <CurrentWeather user={user} />}\n                </Col>\n            </Row>\n            <Row className='space'>\n                <Col>\n                    <h4>Upcoming Walks:</h4>\n                    <hr />\n                    {walks && walks.map((walk) => (<div><h5>{walk.pets.map((pet) => (<span>{pet} </span>))}</h5>\n                        <p>Date: {walk.date}</p>\n                        <p>Time: {walk.time}</p>\n                        <Button href={`/#/walk/${walk.id}`} variant=\"outline-primary\" size='sm'>Begin Walk</Button>\n                        <hr />\n                    </div>))}\n                </Col>\n                <Col>\n                    <h4>Your Bases:</h4>\n                    <hr />\n                    {bases && bases.map((base) => (<h5>{base}</h5>))}\n                    <Button variant=\"primary\" href='/#/addbase'>\n                        Connect A Base\n                    </Button>\n                </Col>\n                <Col>\n                    <h4>Your Connections:</h4>\n                    <hr />\n                    {connections && connections.map((connection) => (<div><h5>{connection.first_name} {connection.last_name}</h5> <p>Email: {connection.email} | Address: {connection.address}</p> <a className='new-line' href={`/#/chat/${connection.id}`}>Message</a> <hr /> </div>))}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ProviderDashboard;","import React from 'react'\n\nfunction LoadingSpinner() {\n    return (\n        <div className=\"spinner-container\">\n            <div className=\"loading-spinner\">\n            </div>\n        </div>\n    )\n}\n\nexport default LoadingSpinner","import UserDashboard from \"../components/UserDashboard\";\nimport ProviderDashboard from \"../components/ProviderDashboard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\n\nfunction DashboardPage({ user, isProvider, logOut, pets, bases }) {\n    if (!user) {\n        return (\n            <div>\n                <LoadingSpinner />\n            </div>\n        )\n\n    }\n    else if (isProvider) {\n        return (\n            <div>\n                <ProviderDashboard user={user} bases={bases} />\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <UserDashboard user={user} pets={pets} bases={bases} />\n            </div>\n        )\n    }\n\n}\n\nexport default DashboardPage;","import { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { useState } from 'react'\nimport '../App.css'\n\nfunction AddPet({ user }) {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    let navigate = useNavigate()\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(event.target[0].value)\n        console.log(event.target[1].value)\n\n        axios.post('/addpet', {\n            'name': event.target[0].value,\n            'species': event.target[1].value,\n            'weight': event.target[2].value,\n            'age': event.target[3].value,\n            'owner': user.email\n        }).then((response) => {\n            if (response.data.data == 'success') {\n                navigate(\"/\", { replace: true })\n                window.location.reload()\n            }\n            else {\n                setErrorMessage(response.data.data)\n            }\n        })\n\n    }\n\n\n    return (\n        <Container>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    <h2>Add Pet</h2>\n                </Col>\n            </Row>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formPetName\">\n                            <Form.Label>Pet Name</Form.Label>\n                            <Form.Control type=\"name\" placeholder=\"Enter Pet Name\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formSpecies\">\n                            <Form.Label>Species</Form.Label>\n                            <Form.Control type=\"species\" placeholder=\"Dog/Cat/Pig\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formPetWeight\">\n                            <Form.Label>Weight</Form.Label>\n                            <Form.Control type=\"weight\" placeholder=\"Enter Pet Weight\" />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formPetAge\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control type=\"age\" placeholder=\"Enter Pet Age\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            AddPet\n                        </Button>\n                    </Form>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <Button variant=\"primary\" href='/'>\n                        Dashboard\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AddPet","import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport bases from '../data/locations.json'\nimport { Button } from 'react-bootstrap'\n\nconst MapContainer = ({ addBase }) => {\n\n  const [mapLocations, setMapLocations] = useState(bases)\n  const [selected, setSelected] = useState({})\n\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"100%\",\n    display: \"flex\"\n  };\n\n  const defaultCenter = {\n    lat: 32.4228638826,\n    lng: -99.8391523672\n  }\n\n  const onSelect = item => {\n    setSelected(item);\n  }\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n\n  const success = position => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    }\n    setCurrentPosition(currentPosition);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n  }, [])\n\n  return (\n    <LoadScript\n      googleMapsApiKey='AIzaSyDrxE9WPjC01VrUhpPXABzh_Kflxs1oo6E'>\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={13}\n        center={currentPosition || defaultCenter}>\n        {\n          mapLocations.map(item => {\n            return (\n              <Marker key={item.name}\n                position={item.location}\n                onClick={() => onSelect(item)}\n              />\n            )\n          })\n        }\n        {\n          selected.location &&\n          (\n            <InfoWindow\n              position={selected.location}\n              clickable={true}\n              onCloseClick={() => setSelected({})}\n            >\n              <div>\n                <p>{selected.name}</p>\n                <Button variant=\"primary\" size=\"sm\" onClick={() => addBase(selected.name)} >\n                  Connect\n                </Button>\n              </div>\n\n            </InfoWindow>\n          )\n        }\n      </GoogleMap>\n    </LoadScript>\n  )\n}\nexport default MapContainer;","import MapContainer from \"../components/MapContainer\"\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'\n\nfunction AddBase({ user }) {\n    let navigate = useNavigate()\n    const addBase = (name) => {\n        axios.post('/addbase', {\n            'name': name,\n            'user': user.email\n        }).then((response) => {\n            if (response.data.data == 'success') {\n                navigate(\"/\", { replace: true })\n                window.location.reload()\n                console.log('added base', name)\n\n            }\n\n        })\n    }\n    return (\n        <Container>\n            <Row className=\"pt-4\">\n\n                <Col>\n                    <h2>Browse the map and connect to a base</h2>\n                </Col>\n\n            </Row>\n            <Row className='pt-5'>\n\n                <Col>\n                    <MapContainer addBase={addBase} />\n                </Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <Button variant=\"primary\" href='/'>\n                        Dashboard\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AddBase","import { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card';\n\nfunction ConnectPal() {\n\n    const [pals, setPals] = useState(null)\n\n    const getPals = async () => {\n        const response = await axios.get('/connectpal')\n        if (response.data == 'no user') {\n            window.location.assign(\"/login\")\n        }\n        const pal_list = response.data && response.data.data\n        console.log(\"pals\", pal_list)\n        for (let i = 0; i < pal_list.length; i++) {\n            console.log(pal_list[i].bases[0])\n        }\n        setPals(pal_list)\n\n    }\n    useEffect(() => { getPals() }, [])\n\n    return (\n        <Container>\n            <Row>\n                <Col></Col>\n                <Col>\n                    {pals && pals.map((pal) => (\n                        <Card className='space pal-card' style={{ width: '18rem' }}>\n                            <Card.Img variant=\"top\" src=\"\" />\n                            <Card.Body>\n                                <Card.Title>{pal.first_name} {pal.last_name}</Card.Title>\n                                <Card.Text>\n                                    Bio: {pal.bio}\n                                </Card.Text>\n                                <Card.Text>\n                                    Rate: {pal.rate} per walk\n                                </Card.Text>\n                                <Card.Text>\n                                    Bases: \n                                </Card.Text>\n                                {pal.bases.map((base)=>(<Card.Text>{base}</Card.Text>))}\n                                <Button variant=\"primary\" href={`#/providers/${pal.key}`}>View {pal.first_name}'s Info</Button>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ConnectPal","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nfunction ProviderPage({ getUserById }) {\n    let { userID } = useParams()\n    const [provider, setProvider] = useState(null)\n    let navigate = useNavigate()\n\n    const getProvider = async () => {\n        const check_provider = await getUserById(userID)\n        console.log(check_provider)\n        setProvider(check_provider)\n    }\n\n    const connectProvider = async (event) => {\n        event.preventDefault()\n        const response = await axios.put('/providers/connect', { provider: provider })\n        if (response.data == 'okay') {\n            navigate(\"/\", { replace: true })\n            window.location.reload()\n        }\n        else {\n            console.log(\"Error Occurred\")\n        }\n\n    }\n\n    useEffect(() => {\n        getProvider()\n    }, [])\n\n    return (\n        <Container>\n            <Row className='pt-5 justify-content-center'>\n\n                <Col>\n                    {provider && <div><h3>{provider.first_name} {provider.last_name}</h3>\n                        <p>Email: {provider.email}</p>\n                        <p>Bases: {provider.bases.map((base)=>(base[1]+ \", \"))}</p>\n                        <p>Rate: {provider.rate} per walk</p>\n                        <p>Bio: {provider.bio}</p></div>}\n                </Col>\n            </Row>\n            <Button vriant=\"primary\" onClick={connectProvider}>Connect</Button>\n        </Container>\n    )\n}\n\nexport default ProviderPage","import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport {\n    Chat,\n    Channel,\n    ChannelHeader,\n    ChannelList,\n    MessageList,\n    MessageInput,\n    Thread,\n    Window,\n} from 'stream-chat-react';\nimport '@stream-io/stream-chat-css/dist/css/index.css';\nimport { useParams } from 'react-router-dom'\n\nconst ChatPage = (props) => {\n    const [client, setClient] = useState(null);\n    const [channel, setChannel] = useState(null);\n    const { walkerID } = useParams()\n\n\n    const setUp = async () => {\n\n        const newClient = new StreamChat('y28mubhduuvm');\n        let walker = await props.getUserById(walkerID)\n        let user = await props.getUser()\n        const handleConnectionChange = ({ online = false }) => {\n            if (!online) return console.log('connection lost');\n            setClient(newClient);\n        };\n\n        await newClient.on('connection.changed', handleConnectionChange);\n\n        await newClient.connectUser(\n            {\n                id: `${walker.first_name}-${walker.last_name}`,\n                name: `${walker.first_name} ${walker.last_name}`,\n            },\n            newClient.devToken(`${walker.first_name}-${walker.last_name}`),\n        );\n\n        await newClient.disconnectUser();\n\n        await newClient.connectUser(\n            {\n                id: `${user.first_name}-${user.last_name}`,\n                name: `${user.first_name} ${user.last_name}`,\n            },\n            newClient.devToken(`${user.first_name}-${user.last_name}`),\n        );\n\n        const newChannel = await newClient.channel('messaging', {\n            // add as many custom fields as you'd like\n            image: 'https://media.istockphoto.com/vectors/green-polygonal-paw-print-template-illustration-design-vector-eps-10-vector-id1220100503?k=20&m=1220100503&s=612x612&w=0&h=qyp-jgCyF7CCF_MinmE-YSTOkUcVu3pZ5YjGdM0vDsI=',\n            name: 'Walker Chat',\n            members: [`${user.first_name}-${user.last_name}`, `${walker.first_name}-${walker.last_name}`],\n        });\n        setChannel(newChannel)\n    }\n\n\n    useEffect(() => {\n        setUp()\n        return () => {\n            newClient.off('connection.changed', handleConnectionChange);\n            newClient.disconnectUser().then(() => console.log('connection closed'));\n        };\n    }, []);\n\n    if (!client) return null;\n    if (!channel) return null;\n\n\n    return (\n        <Chat client={client}>\n\n            <Channel channel={channel}>\n                <Window>\n                    <ChannelHeader />\n                    <MessageList />\n                    <MessageInput />\n                </Window>\n                <Thread />\n            </Channel>\n        </Chat>\n    );\n};\n\nexport default ChatPage;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { subDays } from \"date-fns\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nfunction ScheduleWalk(props) {\n    const [startDate, setStartDate] = useState(null);\n    const [walker, setWalker] = useState(null)\n    const navigate = useNavigate()\n\n    const getWalker = async () => {\n        const check_provider = await axios.get('/provider/get')\n        let check_walker = check_provider && check_provider.data\n        console.log(check_walker)\n        setWalker(check_walker)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let petChoice = []\n        let date = startDate.toLocaleDateString()\n        let time = startDate.toLocaleTimeString()\n        console.log(date, time)\n        for (let i = 0; i < event.target.length - 1; i++) {\n            if (event.target[i].checked) {\n                petChoice.push(event.target[i].id)\n            }\n        }\n        axios.post('/schedulewalk', {\n            'pets': petChoice,\n            'date': date,\n            'walker': walker,\n            'time': time\n        }).then((response) => {\n            if (response.data == 'okay') {\n                navigate(\"/\")\n                window.location.reload()\n            }\n            else {\n                console.log(response)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getWalker()\n    }, [])\n    return (\n        <Container>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    {walker && <h2>Schedule Walk with {walker.first_name}</h2>}\n                </Col>\n            </Row>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    <p>Choose a Date and Time:</p>\n                    <DatePicker\n                        selected={startDate}\n                        onChange={(date) => setStartDate(date)}\n                        minDate={subDays(new Date(), 0)}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        timeIntervals={15}\n                        timeCaption=\"time\"\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                        placeholderText=\"Click here to choose\"\n                    />\n                </Col>\n            </Row>\n            <Row className='justify-content-md-center pt-3'>\n                <Col md=\"auto\">\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formSelectPets\">\n                            <Form.Label>Chose Pets: </Form.Label>\n                            {props.pets && props.pets.map((pet) => (<Form.Check type=\"checkbox\" label={`${pet.name}`} id={`${pet.id}`} />))}\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Schedule\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default ScheduleWalk","import React from 'react';\nimport { useStopwatch } from 'react-timer-hook';\nimport { Button } from 'react-bootstrap'\n\nfunction MyStopwatch(props) {\n  const {\n    seconds,\n    minutes,\n    hours,\n    isRunning,\n    start,\n    pause,\n  } = useStopwatch({ autoStart: false });\n\n  const endWalk = (event) => {\n    event.preventDefault()\n    pause()\n    props.setTime(`${hours}:${minutes}:${seconds}`)\n    props.setEnd(true)\n  }\n\n  const beginWalk = (event) => {\n    event.preventDefault()\n    start()\n    props.setEnd(false)\n  }\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h5>Walk Timer:</h5>\n      <p>hrs:mins:secs</p>\n      <div style={{ fontSize: '100px' }}>\n        <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      <p>{isRunning ? 'Walking' : 'Walking Paused'}</p>\n      <Button variant='primary' size='sm' onClick={beginWalk}>Begin Walk</Button>\n      <Button className=\"m-1\" variant='secondary' size='sm' onClick={pause}>Pause Walk</Button>\n      <Button variant='danger' size='sm' onClick={endWalk}>End Walk</Button>\n    </div>\n  );\n}\n\nexport default MyStopwatch;","import React from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\n\n\nfunction WalkForm(props) {\n    let walkTime = props.time\n    let navigate = useNavigate()\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        for (let i = 0; i < 2; i++) {\n            if (event.target[i].value == \"\") {\n                props.setErrorMessage(`Must enter a ${event.target[i].placeholder}!!`)\n                return\n            }\n        }\n\n        axios.put('/completewalk', {\n            'walk_id': props.walkID,\n            'walk_length': event.target[0].value,\n            'notes': event.target[1].value,\n            'walk_time': event.target[2].placeholder,\n        }).then((response) => {\n            if (response.data == 'success') {\n                navigate(\"/\", { replace: true })\n            }\n            else {\n                props.setErrorMessage(`${response.data}`)\n            }\n        })\n    }\n\n    return (\n        <Form className = \"space\" onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formWalkLength\">\n                <Form.Label>Walk Length:</Form.Label>\n                <Form.Control type=\"Walk Length\" placeholder=\"Walk Length\" />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formNotes\">\n                <Form.Label>Notes:</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Walk Time:</Form.Label>\n                <Form.Control type=\"text\" placeholder={`${walkTime}`} readOnly />\n            </Form.Group>\n            <Button className = \"m-2\" variant=\"primary\" type=\"submit\">\n                Submit Walk\n            </Button>\n        </Form>\n    )\n}\n\nexport default WalkForm;","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyStopwatch from '../components/MyStopwatch'\nimport WalkForm from '../components/WalkForm'\n\nfunction WalkPage(props) {\n    let { walkID } = useParams()\n    const [walk, setWalk] = useState(null)\n    const [end, setEnd] = useState(false)\n    const [time, setTime] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n\n\n    const getWalkByID = async () => {\n        let response = await axios.get(`/getwalk/${walkID}`)\n        let check_walk = response && response.data\n        setWalk(check_walk)\n    }\n\n    useEffect(() => {\n        getWalkByID()\n    }, [])\n\n\n\n    return (\n        <Container>\n            <Row>\n                <Col></Col>\n                <Col>\n                    {walk && <div className='space'><h2>Pets: {walk.pets.map((pet) => (<span>{pet} </span>))}</h2>\n                        <h4>Owner: {walk.owner}</h4>\n                        <h4>Date: {walk.date}</h4>\n                        <h4>Time: {walk.time}</h4>\n                    </div>}\n                </Col>\n                <Col className='space'>\n                    {walk && <MyStopwatch setTime={setTime} setEnd={setEnd} />}\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row>\n                <Col></Col>\n                <Col>\n                    {end && <WalkForm time={time} setErrorMessage={setErrorMessage} walkID={walkID} />}\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default WalkPage","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction WalkDetail() {\n    let { walkID } = useParams()\n    const [walk, setWalk] = useState(null)\n\n    const getWalkByID = async () => {\n        let response = await axios.get(`/getwalk/${walkID}`)\n        let check_walk = response && response.data\n        setWalk(check_walk)\n    }\n\n    useEffect(() => {\n        getWalkByID()\n    }, [])\n\n    return (\n        <Container>\n            <Row>\n                <Col className=\"space\">\n                    <h4>Walk Detail:</h4>\n                    <hr />\n                    {walk && <div><h5>Pets: {walk.pets.map((pet) => (<span>{pet} </span>))}</h5>\n                        <p>Walker: {walk.walker}</p>\n                        <p>Date: {walk.date}</p>\n                        <p>Time Walked (hrs:mins:secs): {walk.time}</p>\n                        <p>Distance Walked: {walk.walk_length}</p>\n                        <p>Notes: {walk.notes}</p>\n                        <hr />\n                    </div>}\n                </Col>\n            </Row>\n            <a href=\"#/\">Go back</a>\n        </Container>\n    )\n}\n\nexport default WalkDetail","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction PetDetail() {\n    let { petID } = useParams()\n    const [pet, setPet] = useState(null)\n\n    const getPetByID = async () => {\n        let response = await axios.get(`/pet/${petID}`)\n        let check_pet = response && response.data\n        setPet(check_pet)\n    }\n\n    useEffect(() => {\n        getPetByID()\n    }, [])\n\n    return (\n        <Container>\n            <Row>\n                <Col className=\"space\">\n                    <h4>Pet Detail:</h4>\n                    <hr />\n                    {pet && <div><h5>Name: {pet.name}</h5>\n                        <p>Species: {pet.species}</p>\n                        <p>Weight: {pet.weight}</p>\n                        <p>Age: {pet.age}</p>\n                        <hr />\n                        <a href={`#/pet/${pet.id}/edit`}>Edit Details</a>\n                    </div>}\n                </Col>\n            </Row>\n            <a href=\"/\">Go back</a>\n        </Container>\n    )\n}\n\nexport default PetDetail","import React, { useEffect, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\n\nfunction PetEdit() {\n    let { petID } = useParams()\n    const [pet, setPet] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    let navigate = useNavigate()\n\n    const getPetByID = async () => {\n        let response = await axios.get(`/pet/${petID}`)\n        let check_pet = response && response.data\n        setPet(check_pet)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        for (let i = 0; i < 4; i++) {\n            if (event.target[i].value == \"\") {\n                setErrorMessage(`Must enter a ${event.target[i].type}!!`)\n                return\n            }\n        }\n\n        axios.put(`/pet/${petID}`, {\n            'name': event.target[0].value,\n            'species': event.target[1].value,\n            'weight': event.target[2].value,\n            'age': event.target[3].value,\n            'id': petID\n        }).then((response) => {\n            if (response.data == 'success') {\n                navigate(\"/\", { replace: true })\n                window.location.reload()\n            }\n            else {\n                setErrorMessage(response.data)\n            }\n        })\n\n    }\n\n    useEffect(() => {\n        getPetByID()\n    }, [])\n\n    return (\n        <Container>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    <h2>Edit Pet:</h2>\n                </Col>\n            </Row>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    {pet && <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formPetName\">\n                            <Form.Label>Pet Name</Form.Label>\n                            <Form.Control type=\"name\" defaultValue={pet.name} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formSpecies\">\n                            <Form.Label>Species</Form.Label>\n                            <Form.Control type=\"species\" defaultValue={pet.species} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formPetWeight\">\n                            <Form.Label>Weight</Form.Label>\n                            <Form.Control type=\"weight\" defaultValue={pet.weight} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formPetAge\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control type=\"age\" defaultValue={pet.age} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Update Pet\n                        </Button>\n                    </Form>}\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <Button variant=\"primary\" href='/'>\n                        Dashboard\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\n\nexport default PetEdit","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction ProfilePage(props) {\n\n    return (\n        <Container>\n            <Row>\n                <Col className=\"space\">\n                    <h4>User Profile:</h4>\n                    <hr />\n                    {props.user && <div><p>Name: {props.user.first_name} {props.user.last_name}</p>\n                        <p>Email: {props.user.email}</p>\n                        <p>Address: {props.user.address}</p>\n                        <p>Zip Code: {props.user.zip_code}</p>\n                        <p>Bio: {props.user.bio}</p>\n                        {props.user.is_provider && <p>Rate: {props.user.rate} per walk</p>}\n                        <hr />\n                        <a href={`#/user/${props.user.id}/edit`}>Edit Profile</a>\n                    </div>}\n                </Col>\n            </Row>\n            <a href=\"/\">Go back</a>\n        </Container>\n    )\n}\n\nexport default ProfilePage","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\n\nfunction EditProfile(props) {\n    const [errorMessage, setErrorMessage] = useState(\"\")\n    let navigate = useNavigate()\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let rate = \"\"\n        for (let i = 0; i < 5; i++) {\n            if (event.target[i].value == \"\") {\n                setErrorMessage(`Must enter a ${event.target[i].type}!!`)\n                return\n            }\n        }\n\n        if (props.user.is_provider) {\n            rate = event.target[6].value\n        }\n\n        axios.put(`/user/${props.user.id}`, {\n            'email': event.target[0].value,\n            'firstName': event.target[1].value,\n            'lastName': event.target[2].value,\n            'address': event.target[3].value,\n            'zip': event.target[4].value,\n            'bio': event.target[5].value,\n            'rate': rate\n\n        }).then((response) => {\n            if (response.data == 'success') {\n                navigate(\"/\", { replace: true })\n                window.location.reload()\n            }\n            else {\n                setErrorMessage(response.data)\n            }\n        })\n\n    }\n\n    return (\n        <Container>\n            <Row className='space justify-content-md-center'>\n                <Col md=\"auto\">\n                    <h2>Edit Profile:</h2>\n                </Col>\n            </Row>\n            <Row className='space'>\n                <Col></Col>\n                <Col>\n                    {props.user && <Form onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"Email\" defaultValue={props.user.email} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control type=\"First Name\" defaultValue={props.user.first_name} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formLastName\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"Last Name\" defaultValue={props.user.last_name} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control type=\"Address\" defaultValue={props.user.address} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formZip\">\n                            <Form.Label>Zip Code</Form.Label>\n                            <Form.Control type=\"Zip Code\" placeholder=\"Zip Code\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBio\">\n                            <Form.Label>Bio:</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} defaultValue={props.user.bio} />\n                        </Form.Group>\n                        {props.user && props.user.is_provider && <Form.Group className=\"mb-3\" controlId=\"formRate\">\n                            <Form.Label>Rate per walk:</Form.Label>\n                            <Form.Control type=\"Rate\" defaultValue={props.user.rate} />\n                        </Form.Group>}\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit changes\n                        </Button>\n                    </Form>}\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <Button variant=\"primary\" href='/'>\n                        Dashboard\n                    </Button>\n                </Col>\n                <Col></Col>\n            </Row>\n            <Row className='pt-2'>\n                <Col></Col>\n                <Col>\n                    <div id='messageDiv'>\n                        {errorMessage}\n                    </div>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EditProfile","import React, { useState, useEffect } from 'react';\nimport NavBar from './components/NavBar';\nimport { HashRouter as Router, Routes, Route, } from 'react-router-dom';\nimport axios from 'axios'\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport DashboardPage from './pages/DashboardPage'\nimport './App.css'\nimport AddPet from './pages/AddPet';\nimport AddBase from './pages/AddBase'\nimport ConnectPal from './pages/ConnectPal';\nimport ProviderPage from './pages/ProviderPage';\nimport ChatPage from './pages/ChatPage';\nimport ScheduleWalk from './pages/ScheduleWalk';\nimport WalkPage from './pages/WalkPage';\nimport WalkDetail from './pages/WalkDetail';\nimport PetDetail from './pages/PetDetail';\nimport PetEdit from './pages/PetEdit';\nimport ProfilePage from './pages/ProfilePage';\nimport EditProfile from './pages/EditProfile';\n\nconst getCSRFToken = () => {\n  let csrfToken\n\n  const cookies = document.cookie.split(';')\n  for (let cookie of cookies) {\n    const crumbs = cookie.split('=')\n    if (crumbs[0].trim() === 'csrftoken') {\n      csrfToken = crumbs[1]\n    }\n  }\n  return csrfToken\n}\naxios.defaults.headers.common['X-CSRFToken'] = getCSRFToken()\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [isProvider, setIsProvider] = useState(null)\n  const [pets, setPets] = useState(null)\n  const [bases, setBases] = useState(null)\n\n\n  const checkPets = async () => {\n    const response = await axios.get('/checkpets')\n    let petArray = []\n    if (response.data != 'failure') {\n      for (let i = 0; i < response.data.length; i++) {\n        let newPet = response.data[i].fields\n        newPet[\"id\"] = response.data[i].pk\n        petArray.push(newPet)\n      }\n    }\n    else {\n      petArray = null\n    }\n    setPets(petArray)\n  }\n\n  const checkBases = async () => {\n    const response = await axios.get('/checkbases')\n    let baseArray = []\n    if (response.data != 'failure') {\n      for (let i = 0; i < response.data.length; i++) {\n        baseArray.push(response.data[i].fields.name)\n      }\n    }\n    else {\n      baseArray = null\n    }\n    setBases(baseArray)\n  }\n\n  const setProvider = (value) => {\n    setIsProvider(value)\n  }\n\n  const checkUser = async () => {\n    const response = await axios.get('/checkuser')\n    let user = response.data && response.data[0] && response.data[0].fields\n    let id = response.data && response.data[0] && response.data[0].pk\n    if (user) {\n      user.id = id\n    }\n    console.log('user? ', user)\n    setUser(user)\n    user && setIsProvider(user['is_provider'])\n    return user\n  }\n\n  const getUserById = async (userId) => {\n    const response = await axios.get(`/user/${userId}`)\n    const user = response.data && response.data[0] && response.data[0].fields\n    return user\n  }\n\n\n  useEffect(() => {\n    checkUser().then(\n      checkPets()).then(checkBases())\n  }, [])\n\n\n\n  return (\n    <div className='bg'>\n      <Router>\n        <NavBar user={user} checkUser={checkUser} />\n        <Routes>\n          <Route path='/' element={<DashboardPage user={user} isProvider={isProvider} pets={pets} bases={bases} />} />\n          <Route path='/signup' element={<Signup />} />\n          <Route path='/login' element={<Login checkUser={checkUser} setProvider={setProvider} />} />\n          <Route path='/addpet' element={<AddPet user={user} />} />\n          <Route path='/addbase' element={<AddBase user={user} />} />\n          <Route path='/connectpal' element={<ConnectPal />} />\n          <Route path='/providers/:userID' element={<ProviderPage getUserById={getUserById} />} />\n          <Route path='/chat/:walkerID' element={<ChatPage getUser={checkUser} getUserById={getUserById} />} />\n          <Route path='/schedulewalk' element={<ScheduleWalk getUser={checkUser} pets={pets} getUserById={getUserById} />} />\n          <Route path='/walk/:walkID' element={<WalkPage user={user} />} />\n          <Route path='/walk/:walkID/view' element={<WalkDetail />} />\n          <Route path='/pet/:petID/view' element={<PetDetail />} />\n          <Route path='/pet/:petID/edit' element={<PetEdit />} />\n          <Route path='/user/:userID/view' element={<ProfilePage user={user} />} />\n          <Route path='/user/:userID/edit' element={<EditProfile user={user} />} />\n        </Routes>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n)\n"],"names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","NavBar","user","checkUser","navigate","useNavigate","logOut","event","preventDefault","axios","post","then","response","log","replace","navHome","window","location","reload","navProfile","id","Navbar","Container","_jsx","Nav","Signup","errorMessage","setErrorMessage","useState","handleSubmit","i","target","value","placeholder","data","login","Row","Col","_jsxs","Form","Button","Login","finally","signUp","UserDashboard","pets","bases","walker","setWalker","walks","setWalks","completedWalks","setCompletedWalks","getWalker","checkProvider","get","checkWalker","getPetWalks","checkWalks","upcomingWalks","getCompletedWalks","useEffect","first_name","map","pet","species","name","base","last_name","walk","date","time","CurrentWeather","props","temp","setTemp","weather","setWeather","city","setCity","myOpenWeatherApiKey","getTemp","fetch","zip_code","ok","json","celcTemp","main","fahrTemp","Math","round","description","e","console","error","ProviderDashboard","connections","setConnections","getConnections","checkConnects","getProviderWalks","connection","email","address","LoadingSpinner","DashboardPage","isProvider","AddPet","MapContainer","addBase","mapLocations","setMapLocations","selected","setSelected","mapStyles","height","width","display","defaultCenter","lat","lng","onSelect","item","currentPosition","setCurrentPosition","success","position","coords","latitude","longitude","geolocation","getCurrentPosition","LoadScript","GoogleMap","Marker","InfoWindow","AddBase","ConnectPal","pals","setPals","getPals","assign","pal_list","length","pal","Card","bio","rate","key","ProviderPage","getUserById","userID","useParams","provider","setProvider","getProvider","check_provider","connectProvider","put","ChatPage","client","setClient","channel","setChannel","walkerID","setUp","newClient","StreamChat","getUser","handleConnectionChange","online","on","connectUser","devToken","disconnectUser","newChannel","image","members","off","Chat","Channel","Window","ChannelHeader","MessageList","MessageInput","Thread","ScheduleWalk","startDate","setStartDate","check_walker","petChoice","toLocaleDateString","toLocaleTimeString","checked","push","DatePicker","subDays","Date","MyStopwatch","seconds","minutes","hours","isRunning","start","pause","useStopwatch","autoStart","textAlign","fontSize","setEnd","setTime","WalkForm","walkTime","walkID","WalkPage","setWalk","end","getWalkByID","check_walk","owner","WalkDetail","walk_length","notes","PetDetail","petID","setPet","getPetByID","check_pet","weight","age","PetEdit","type","ProfilePage","is_provider","EditProfile","getCSRFToken","csrfToken","cookies","document","cookie","split","crumbs","trim","defaults","headers","common","App","setUser","setIsProvider","setPets","setBases","checkPets","petArray","newPet","fields","pk","checkBases","baseArray","userId","Router","Routes","Route","ReactDOM","createRoot","getElementById","render","React"],"mappings":"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"}